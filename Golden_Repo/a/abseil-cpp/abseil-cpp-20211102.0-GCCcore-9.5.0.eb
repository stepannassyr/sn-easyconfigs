# Abseil C++ libraries.
#
# NOTE: #define ABSL_OPTION_USE_STD_STRING_VIEW 0 workaround for the complicated C++ ABI situation

easyblock = 'CMakeNinja'

name = 'abseil-cpp'
version = '20211102.0'

homepage = 'https://abseil.io/'
description = "Abseil is an open source collection of C++ libraries drawn from the most fundamental pieces of Googleâ€™s internal codebase."

toolchain = {'name': 'GCCcore', 'version': '9.5.0'}
toolchainopts = {'pic' : True}

github_account = 'abseil'
source_urls = [GITHUB_SOURCE]
sources = ['%(version)s.tar.gz']
patches = ['abseil-cpp-20210324.1-old-cxxabi.patch']
checksums = ['dcf71b9cba8dc0ca9940c4b316a0c796be8fab42b070bb6b7cab62b48f0e66c4']

builddependencies = [
    ('binutils', '2.38'),
    ('CMake', '3.23.1'),
    ('Ninja', '1.10.2'),
]


configopts = "-DABSL_ENABLE_INSTALL=ON -DCMAKE_CXX_FLAGS=\"-D_GLIBCXX_USE_CXX11_ABI=0\" "

# Only check a subset of the files
sanity_check_paths = {
    'files': ['include/absl/base/%s.h' % x for x in ['attributes','call_once','casts','config','const_init','dynamic_annotations','log_severity','macros','optimization','options','policy_checks','port','thread_annotations']]+
             ['lib/libabsl_%s.a' % x for x in ['base','city','flags','hash','log_severity','raw_hash_set','status','strings','time']]+
             ['lib/pkgconfig/absl_%s.pc' % x for x in ['any','base','config','flags','hash','log_severity','strings','time']]+
             ['lib/cmake/absl/absl%s.cmake' % x for x in ['Config','ConfigVersion','Targets','Targets-release']],
    'dirs': ['include/absl/%s' % x for x in ['algorithm','base','cleanup','container','debugging','flags','functional','hash','memory','meta','numeric','random','status','strings','synchronization','time','types','utility']]
}

moduleclass = 'lib'
