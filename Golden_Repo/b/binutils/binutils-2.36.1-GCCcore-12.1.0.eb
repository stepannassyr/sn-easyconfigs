# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
easyblock = 'ConfigureMake'

name = 'binutils'
version = '2.36.1'

homepage = 'http://directory.fsf.org/project/binutils/'
description = """
 binutils: GNU binary utilities
"""


toolchain = {'name': 'GCCcore', 'version': '12.1.0'}
toolchainopts = {'pic': True}

source_urls = [GNU_SOURCE]
sources = [SOURCE_TAR_GZ]
checksums = ['e68edeaaeb6ca9687b6dcbaedd1b376506baad2d48de26a885fc5ab6acb839da']

builddependencies = [
    ('flex', '2.6.4'),
    ('M4', '1.4.19'),
    ('Bison', '3.8.2'),
    # zlib required, but being linked in statically, so not a runtime dep
    ('zlib', '1.2.12'),
    # use same binutils version that was used when building GCC toolchain, to 'bootstrap' this binutils
    ('binutils', version, '', True)
]

# statically link with zlib, to avoid runtime dependency on zlib
preconfigopts = 'LIBS="$EBROOTZLIB/lib/libz.a"'
prebuildopts = 'LIBS="$EBROOTZLIB/lib/libz.a"'

# make sure that system libraries are also considered by ld and ld.gold is also built
# --enable-plugins should be used whenever --enable-gold is used, see http://llvm.org/docs/GoldPlugin.html
configopts = '--with-sysroot=/ --enable-gold --enable-ld=default --enable-plugins  --enable-shared --enable-static'

postinstallcmds = [
    "cp libiberty/libiberty.a %(installdir)s/lib/",
    "cp include/libiberty.h %(installdir)s/include",
    "cp include/demangle.h %(installdir)s/include/",
    "mkdir %(installdir)s/info",
    "cp libiberty/libiberty.texi %(installdir)s/info/"
]

local_binlist = ['addr2line', 'ar', 'as', 'c++filt', 'elfedit', 'gprof', 'ld', 'ld.bfd', 'ld.gold', 'nm',
           'objcopy', 'objdump', 'ranlib', 'readelf', 'size', 'strings', 'strip']

sanity_check_paths = {
    'files': ['bin/%s' % x for x in local_binlist] +
             ['lib/lib%s.%s' % (l, x) for l in ['bfd', 'opcodes'] for x in ['a', SHLIB_EXT]] +
             ['include/%s' % x for x in ['ansidecl.h', 'bfd.h', 'bfdlink.h', 'dis-asm.h', 'symcat.h']],
    'dirs': [],
}

moduleclass = 'tools'
