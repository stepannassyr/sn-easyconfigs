From a02be7e4e65bc83be73efa1e9a1852e894421d74 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lau=20Mercadal=20Meli=C3=A0?= <lau.mercadal@bsc.es>
Date: Fri, 26 Mar 2021 16:47:02 +0100
Subject: [PATCH 2/2] Updates num_cntrs and some cleanup

---
 lib/events/arm_hisilicon_kunpeng_events.h | 1531 ---------------------
 lib/pfmlib_arm_armv8.c                    |    3 +-
 2 files changed, 2 insertions(+), 1532 deletions(-)

diff --git a/lib/events/arm_hisilicon_kunpeng_events.h b/lib/events/arm_hisilicon_kunpeng_events.h
index e52edf9..ec32075 100644
--- a/lib/events/arm_hisilicon_kunpeng_events.h
+++ b/lib/events/arm_hisilicon_kunpeng_events.h
@@ -80,91 +80,12 @@ static const arm_entry_t arm_kunpeng_pe[ ] = {
 		.code = 0x21,
 		.desc = "Instruction architecturally executed, branch"
 	},
-//	{
-//		.name = "SIMD_INST_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8000,
-//		.desc = "This event counts SVE instructions, but not non-SIMD SVE instructions, and Advanced SIMD instructions, but not Advanced SIMD scalar instructions.",
-//	},
-//	{
-//		.name = "ASE_INST_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8001,
-//		.desc = "This event counts architecturally executed Advanced SIMD instructions.",
-//	},
 	{
 		.name = "SVE_INST_RETIRED",
 		.modmsk = ARMV8_ATTRS,
 		.code = 0x8002,
 		.desc = "This event counts architecturally executed SVE instructions.",
 	},
-//	{
-//		.name = "ASE_SVE_INST_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8003,
-//		.desc = "This event counts architecturally executed instructions that are counted by ASE_INST_RETIRED or SVE_INST_RETIRED.",
-//	},
-//	{
-//		.name = "BR_SKIP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8107,
-//		.desc = "This event counts the each conditional Software change of the PC instruction, on the architecturally executed path, that is not taken.",
-//	},
-//	{
-//		.name = "BR_IMMED_TAKEN_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8108,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IMMED_RETIRED and PC_WRITE_RETIRED. These are all immediate branch instructions where the branch is taken.",
-//	},
-//	{
-//		.name = "BR_IMMED_SKIP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8109,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IMMED_RETIRED and BR_SKIP_RETIRED. These are all immediate branch instructions where the branch is not taken.",
-//	},
-//	{
-//		.name = "BR_IND_TAKEN_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810a,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IND_RETIRED and PC_WRITE_RETIRED. These are branch instructions where the branch is taken, but does not include immediate instructions.",
-//	},
-//	{
-//		.name = "BR_IND_SKIP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810b,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IND_RETIRED and BR_SKIP_RETIRED. These are branch instructions where the branch is not taken, but does not include immediate instructions.",
-//	},
-//	{
-//		.name = "BR_INDNR_TAKEN_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810c,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IND_RETIRED, PC_WRITE_RETIRED and BR_RETURN_RETIRED. These are branch instructions where the branch is taken, but does not include immediate instructions.",
-//	},
-//	{
-//		.name = "BR_INDNR_SKIP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810d,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_INDNR_RETIRED and BR_SKIP_RETIRED. These are branch instructions where the branch is not taken, but does not include immediate instructions.",
-//	},
-//	{
-//		.name = "BR_RETURN_ANY_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810e,
-//		.desc = "This event counts the instructions, on the architecturally executed path, counted by both BR_IND_RETIRED where, if taken, the branch would be counted by BR_RETURN_RETIRED."
-//	},
-//	{
-//		.name = "BR_RETURN_SKIP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x810f,
-//		.desc = "This event counts the instructions, of the architecturally executed path, counted by both BR_RETURN_ANY_RETIRED and BR_SKIP_RETIRED. These are branch return instructions, where the branch is not taken.",
-//	},
-//	{
-//		.name = "BR_INDNR_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x811e,
-//		.desc = "This event counts the instructions on the architecturally executed path, counted by BR_RETIRED, but not counted by BR_RETURN_ANY_RETIRED. These are branch instructions but does not include returns or immediate instructions.",
-//	},
-//
 
 /* Common microarchitectural events */
 	{
@@ -389,48 +310,6 @@ static const arm_entry_t arm_kunpeng_pe[ ] = {
 		.code = 0x38,
 		.desc = "Access to another socket in a multi-socket system, read."
 	},
-//	{
-//		.name = "L1D_CACHE_LMISS_RD",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x0039,
-//		.desc = "Level 1 data cache long-latency read miss.",
-//	},
-//	{
-//		.name = "OP_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003a,
-//		.desc = "Micro-operation architecturally executed.",
-//	},
-//	{
-//		.name = "OP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003b,
-//		.desc = "Micro-operation speculatively executed.",
-//	},
-//	{
-//		.name = "STALL",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003c,
-//		.desc = "No operation sent for execution.",
-//	},
-//	{
-//		.name = "STALL_SLOT_BACKEND",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003d,
-//		.desc = "No operation sent for execution on a Slot due to the backend.",
-//	},
-//	{
-//		.name = "STALL_SLOT_FRONTEND",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003e,
-//		.desc = "No operation sent for execution on a Slot due to the frontend.",
-//	},
-//	{
-//		.name = "STALL_SLOT",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x003f,
-//		.desc = "No operation sent for execution on a Slot.",
-//	},
 	{
 		.name = "SAMPLE_POP",
 		.modmsk = ARMV8_ATTRS,
@@ -455,1416 +334,6 @@ static const arm_entry_t arm_kunpeng_pe[ ] = {
 		.code = 0x4003,
 		.desc = "Sample collided with a previous sample."
 	},
-//	{
-//		.name = "CNT_CYCLES",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4004,
-//		.desc = "Constant frequency cycles.",
-//	},
-//	{
-//		.name = "STALL_BACKEND_MEM",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4005,
-//		.desc = "Memory stall cycles.",
-//	},
-//	{
-//		.name = "L1I_CACHE_LMISS",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4006,
-//		.desc = "Level 1 instruction cache long-latency read miss.",
-//	},
-//	{
-//		.name = "L2D_CACHE_LMISS_RD",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4009,
-//		.desc = "Level 2 data cache long-latency read miss.",
-//	},
-//	{
-//		.name = "L2I_CACHE_LMISS",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x400a,
-//		.desc = "Level 2 instruction cache long-latency read miss.",
-//	},
-//	{
-//		.name = "L3D_CACHE_LMISS_RD",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x400b,
-//		.desc = "Level 3 data cache long-latency read miss.",
-//	},
-//	{
-//		.name = "LDST_ALIGN_LAT",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4020,
-//		.desc = "Access with additional latency from alignment.",
-//	},
-//	{
-//		.name = "LD_ALIGN_LAT",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4021,
-//		.desc = "Load with additional latency from alignment.",
-//	},
-//	{
-//		.name = "ST_ALIGN_LAT",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4022,
-//		.desc = "Store with additional latency from alignment.",
-//	},
-//	{
-//		.name = "MEM_ACCESS_CHECKED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4024,
-//		.desc = "Checked data memory access.",
-//	},
-//	{
-//		.name = "MEM_ACCESS_CHECKED_RD",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4025,
-//		.desc = "Checked data memory access, read.",
-//	},
-//	{
-//		.name = "MEM_ACCESS_CHECKED_WR",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x4026,
-//		.desc = "Checked data memory access, write.",
-//	},
-//	{
-//		.name = "SIMD_INST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8004,
-//		.desc = "SIMD Instructions, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8005,
-//		.desc = "Advanced SIMD Instructions, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8006,
-//		.desc = "SVE Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8007,
-//		.desc = "Advanced SIMD and SVE Operations speculatively executed.",
-//	},
-//	{
-//		.name = "UOP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8008,
-//		.desc = "Microarchitectural operation, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_UOP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8009,
-//		.desc = "Advanced SIMD Microarchitectural operation, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_UOP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x800a,
-//		.desc = "SVE micro-operation, Speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_UOP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x800b,
-//		.desc = "Advanced SIMD and SVE Microarchitectural operation, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SIMD_UOP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x800c,
-//		.desc = "SIMD micro-operation, Speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_MATH_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x800e,
-//		.desc = "SVE Math accelerator Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8010,
-//		.desc = "Floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8011,
-//		.desc = "Advanced SIMD floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8012,
-//		.desc = "SVE floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8013,
-//		.desc = "Advanced SIMD and SVE floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_HP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8014,
-//		.desc = "Half-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_HP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8015,
-//		.desc = "Advanced SIMD, Half-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_HP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8016,
-//		.desc = "SVE Half-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_HP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8017,
-//		.desc = "Advanced SIMD and SVE Half-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8018,
-//		.desc = "Single-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_SP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8019,
-//		.desc = "Advanced SIMD Single-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_SP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801a,
-//		.desc = "SVE Single-precision floating-point operations, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_SP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801b,
-//		.desc = "Advanced SIMD and SVE Single-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_DP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801c,
-//		.desc = "Double-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_DP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801d,
-//		.desc = "Advanced SIMD Double-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_DP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801e,
-//		.desc = "SVE Double-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_DP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x801f,
-//		.desc = "Advanced SIMD and SVE Double-precision floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8020,
-//		.desc = "Floating-point divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8021,
-//		.desc = "Advanced SIMD Floating-point divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8022,
-//		.desc = "SVE Floating-point divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8023,
-//		.desc = "Advanced SIMD and SVE Floating-point divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SQRT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8024,
-//		.desc = "Floating-point square-root Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_SQRT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8025,
-//		.desc = "Advanced SIMD Floating-point square-root Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_SQRT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8026,
-//		.desc = "SVE Floating-point square-root Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_SQRT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8027,
-//		.desc = "Advanced SIMD and SVE Floating-point square root Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_FMA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8028,
-//		.desc = "Floating-point FMA Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_FMA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8029,
-//		.desc = "Advanced SIMD Floating-point FMA Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_FMA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802a,
-//		.desc = "SVE Floating-point FMA Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_FMA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802b,
-//		.desc = "Advanced SIMD and SVE Floating-point FMA Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802c,
-//		.desc = "Floating-point multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802d,
-//		.desc = "Advanced SIMD Floating-point multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802e,
-//		.desc = "SVE Floating-point multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x802f,
-//		.desc = "Advanced SIMD and SVE Floating-point multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_ADDSUB_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8030,
-//		.desc = "Floating-point add or subtract Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_ADDSUB_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8031,
-//		.desc = "Advanced SIMD floating-point add or subtract Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_ADDSUB_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8032,
-//		.desc = "SVE floating-point add or subtract Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_ADDSUB_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8033,
-//		.desc = "Advanced SIMD and SVE floating-point add and subtract Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_RECPE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8034,
-//		.desc = "Floating-point reciprocal estimate Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_RECPE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8035,
-//		.desc = "Advanced SIMD floating-point reciprocal estimate Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_RECPE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8036,
-//		.desc = "SVE floating-point reciprocal estimate Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_RECPE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8037,
-//		.desc = "Advanced SIMD and SVE floating-point reciprocal estimate Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_CVT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8038,
-//		.desc = "Floating-point convert Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_CVT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8039,
-//		.desc = "Advanced SIMD floating-point convert Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_CVT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803a,
-//		.desc = "SVE floating-point convert Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_CVT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803b,
-//		.desc = "Advanced SIMD and SVE floating-point convert Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_AREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803c,
-//		.desc = "SVE floating-point accumulating reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_PREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803d,
-//		.desc = "Advanced SIMD floating-point pairwise add step Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_VREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803e,
-//		.desc = "SVE floating-point vector reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_VREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x803f,
-//		.desc = "Advanced SIMD and SVE floating-point vector reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8040,
-//		.desc = "Integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8041,
-//		.desc = "Advanced SIMD integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8042,
-//		.desc = "SVE integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8043,
-//		.desc = "Advanced SIMD and SVE integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8044,
-//		.desc = "Integer divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_DIV64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8045,
-//		.desc = "64-bit integer divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_DIV_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8046,
-//		.desc = "SVE integer divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_DIV64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8047,
-//		.desc = "SVE 64-bit integer divide Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8048,
-//		.desc = "Integer multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8049,
-//		.desc = "Advanced SIMD integer multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804a,
-//		.desc = "SVE integer multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT_MUL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804b,
-//		.desc = "Advanced SIMD and SVE integer multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_MUL64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804c,
-//		.desc = "Integer 64x64 multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_MUL64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804d,
-//		.desc = "SVE integer 64-bit multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_MULH64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804e,
-//		.desc = "Integer 64-bit multiply returning high part Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_MULH64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x804f,
-//		.desc = "SVE integer 64-bit multiply high part Operations speculatively executed.",
-//	},
-//	{
-//		.name = "NONFP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8058,
-//		.desc = "Non floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_NONFP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8059,
-//		.desc = "Advanced SIMD non-floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_NONFP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x805a,
-//		.desc = "SVE non-floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_NONFP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x805b,
-//		.desc = "Advanced SIMD and SVE non-floating-point Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT_VREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x805d,
-//		.desc = "Advanced SIMD integer reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_VREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x805e,
-//		.desc = "SVE integer reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT_VREDUCE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x805f,
-//		.desc = "Advanced SIMD and SVE integer reduction Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PERM_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8060,
-//		.desc = "SVE permute Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PERM_IGRANULE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8061,
-//		.desc = "SVE intra-granule permute Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PERM_XGRANULE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8062,
-//		.desc = "SVE cross-granule permute Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PERM_VARIABLE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8063,
-//		.desc = "SVE programmable permute Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_XPIPE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8064,
-//		.desc = "SVE cross-pipe Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_XPIPE_Z2R_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8065,
-//		.desc = "SVE vector to scalar cross-pipe Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_XPIPE_R2Z_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8066,
-//		.desc = "SVE scalar to vector cross-pipe Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_NVEC_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8067,
-//		.desc = "SVE predicate-only Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8068,
-//		.desc = "SVE predicate generating Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_FLG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8069,
-//		.desc = "SVE predicate flag setting Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_CMP_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806a,
-//		.desc = "SVE vector compare Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_FCM_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806b,
-//		.desc = "SVE floating-point vector compare Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PGEN_LOGIC_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806c,
-//		.desc = "SVE predicate logical Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PPERM_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806d,
-//		.desc = "SVE predicate permute Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PSCAN_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806e,
-//		.desc = "SVE predicate scan Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PCNT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x806f,
-//		.desc = "SVE predicate count Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PLOOP_WHILE_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8070,
-//		.desc = "SVE predicate loop while Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PLOOP_TEST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8071,
-//		.desc = "SVE predicate loop test Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PLOOP_ELTS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8072,
-//		.desc = "SVE predicate loop elements Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PLOOP_TERM_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8073,
-//		.desc = "SVE predicate loop termination, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRED_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8074,
-//		.desc = "SVE predicated Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRED_EMPTY_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8075,
-//		.desc = "SVE predicated operations with no active predicates, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRED_FULL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8076,
-//		.desc = "SVE predicated operations with all active predicates, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRED_PARTIAL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8077,
-//		.desc = "SVE predicated operations with partially active predicates, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_UNPRED_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8078,
-//		.desc = "SVE unpredicated Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRED_NOT_FULL_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8079,
-//		.desc = "SVE predicated operations with empty or partially active predicates, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_MOVPRFX_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x807c,
-//		.desc = "SVE MOVPRFX Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_MOVPRFX_Z_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x807d,
-//		.desc = "SVE MOVPRFX zeroing predication Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_MOVPRFX_M_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x807e,
-//		.desc = "SVE MOVPRFX merging predication Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_MOVPRFX_U_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x807f,
-//		.desc = "SVE MOVPRFX unfused Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8080,
-//		.desc = "SVE load, store, and prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LD_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8081,
-//		.desc = "SVE load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_ST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8082,
-//		.desc = "SVE store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRF_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8083,
-//		.desc = "SVE prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_LDST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8084,
-//		.desc = "Advanced SIMD and SVE, load and store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_LD_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8085,
-//		.desc = "Advanced SIMD and SVE load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_ST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8086,
-//		.desc = "Advanced SIMD and SVE store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "PRF_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8087,
-//		.desc = "Prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "BASE_LDST_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8088,
-//		.desc = "General-purpose register load, store and prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "BASE_LD_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8089,
-//		.desc = "General-purpose register load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "BASE_ST_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x808a,
-//		.desc = "General-purpose register store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "BASE_PRF_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x808b,
-//		.desc = "General-purpose register prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FPASE_LDST_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x808c,
-//		.desc = "Floating-point and Advanced SIMD register load and store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FPASE_LD_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x808d,
-//		.desc = "Floating-point and Advanced SIMD register load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FPASE_ST_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x808e,
-//		.desc = "Floating-point and Advanced SIMD register store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8090,
-//		.desc = "SVE unpredicated load and store register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDR_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8091,
-//		.desc = "SVE unpredicated load register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_STR_REG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8092,
-//		.desc = "SVE unpredicated store register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_PREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8094,
-//		.desc = "SVE load and store predicate register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDR_PREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8095,
-//		.desc = "SVE load predicate register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_STR_PREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8096,
-//		.desc = "SVE store predicate register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_ZREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8098,
-//		.desc = "SVE load and store vector register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDR_ZREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8099,
-//		.desc = "SVE load vector register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_STR_ZREG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x809a,
-//		.desc = "SVE store vector register Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x809c,
-//		.desc = "SVE contiguous load, store, and prefetch element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LD_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x809d,
-//		.desc = "SVE contiguous load element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_ST_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x809e,
-//		.desc = "SVE contiguous store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRF_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x809f,
-//		.desc = "SVE contiguous prefetch element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDSTNT_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a0,
-//		.desc = "SVE non-temporal contiguous load and store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDNT_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a1,
-//		.desc = "SVE non-temporal contiguous load element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_STNT_CONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a2,
-//		.desc = "SVE non-temporal contiguous store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_LDST_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a4,
-//		.desc = "Advanced SIMD and SVE contiguous load and store multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_LD_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a5,
-//		.desc = "Advanced SIMD and SVE contiguous load multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_ST_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a6,
-//		.desc = "Advanced SIMD and SVE contiguous store multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a8,
-//		.desc = "SVE contiguous load and store multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LD_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80a9,
-//		.desc = "SVE contiguous load multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_ST_MULTI_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80aa,
-//		.desc = "SVE contiguous store multiple vector Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST_NONCONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ac,
-//		.desc = "SVE non-contiguous load, store, and prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LD_GATHER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ad,
-//		.desc = "SVE gather-load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_ST_SCATTER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ae,
-//		.desc = "SVE scatter-store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRF_GATHER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80af,
-//		.desc = "SVE gather-prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDST64_NONCONTIG_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b0,
-//		.desc = "SVE 64-bit non-contiguous load, store, and prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LD64_GATHER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b1,
-//		.desc = "SVE 64-bit gather-load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_ST64_SCATTER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b2,
-//		.desc = "SVE 64-bit scatter-store Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_PRF64_GATHER_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b3,
-//		.desc = "SVE 64-bit gather-prefetch Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_LDST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b4,
-//		.desc = "Advanced SIMD and SVE unaligned accesses.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_LD_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b5,
-//		.desc = "Advanced SIMD and SVE unaligned read accesses.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_ST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b6,
-//		.desc = "Advanced SIMD and SVE unaligned write accesses.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_CONTIG_LDST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b8,
-//		.desc = "Advanced SIMD and SVE unaligned contiguous accesses.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_CONTIG_LD_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80b9,
-//		.desc = "Advanced SIMD and SVE unaligned contiguous read accesses.",
-//	},
-//	{
-//		.name = "ASE_SVE_UNALIGNED_CONTIG_ST_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ba,
-//		.desc = "Advanced SIMD and SVE unaligned contiguous write accesses.",
-//	},
-//	{
-//		.name = "SVE_LDFF_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80bc,
-//		.desc = "SVE First-fault load Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_LDFF_FAULT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80bd,
-//		.desc = "SVE First-fault load operations which set FFR bit to 0, Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c0,
-//		.desc = "Scalable floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c1,
-//		.desc = "Non-scalable floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_HP_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c2,
-//		.desc = "Scalable half-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_HP_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c3,
-//		.desc = "Non-scalable half-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SP_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c4,
-//		.desc = "Scalable single-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_SP_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c5,
-//		.desc = "Non-scalable single-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_DP_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c6,
-//		.desc = "Scalable double-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "FP_DP_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c7,
-//		.desc = "Non-scalable double-precision floating-point element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c8,
-//		.desc = "Scalable integer element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "INT_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80c9,
-//		.desc = "Non-scalable integer element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "LDST_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ca,
-//		.desc = "Scalable load and store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "LDST_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80cb,
-//		.desc = "Non-scalable load and store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "LD_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80cc,
-//		.desc = "Scalable load element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "LD_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80cd,
-//		.desc = "Non-scalable load element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ST_SCALE_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ce,
-//		.desc = "Scalable store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ST_FIXED_OPS_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80cf,
-//		.desc = "Non-scalable store element Operations speculatively executed.",
-//	},
-//	{
-//		.name = "LDST_SCALE_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80da,
-//		.desc = "Scalable load and store bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "LDST_FIXED_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80db,
-//		.desc = "Non-scalable load and store bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "LD_SCALE_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80dc,
-//		.desc = "Scalable load bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "LD_FIXED_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80dd,
-//		.desc = "Non-scalable load bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "ST_SCALE_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80de,
-//		.desc = "Scalable store bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "ST_FIXED_BYTES_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80df,
-//		.desc = "Non-scalable store bytes, Speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT8_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e1,
-//		.desc = "Advanced SIMD 8-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT8_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e2,
-//		.desc = "SVE 8-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT8_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e3,
-//		.desc = "Advanced SIMD and SVE 8-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT16_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e5,
-//		.desc = "Advanced SIMD 16-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT16_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e6,
-//		.desc = "SVE 16-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT16_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e7,
-//		.desc = "Advanced SIMD and SVE 16-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT32_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80e9,
-//		.desc = "Advanced SIMD 32-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT32_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ea,
-//		.desc = "SVE 32-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT32_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80eb,
-//		.desc = "Advanced SIMD and SVE 32-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ed,
-//		.desc = "Advanced SIMD 64-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ee,
-//		.desc = "SVE 64-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT64_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ef,
-//		.desc = "Advanced SIMD and SVE 64-bit integer Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f1,
-//		.desc = "Advanced SIMD floating-point dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f2,
-//		.desc = "SVE floating-point dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f3,
-//		.desc = "Advanced SIMD and SVE floating-point dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_FP_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f5,
-//		.desc = "Advanced SIMD floating-point matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_FP_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f6,
-//		.desc = "SVE floating-point matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_FP_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f7,
-//		.desc = "Advanced SIMD and SVE floating-point matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80f9,
-//		.desc = "Advanced SIMD integer dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80fa,
-//		.desc = "SVE integer dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT_DOT_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80fb,
-//		.desc = "Advanced SIMD and SVE integer dot-product Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_INT_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80fd,
-//		.desc = "Advanced SIMD integer matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "SVE_INT_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80fe,
-//		.desc = "SVE integer matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "ASE_SVE_INT_MMLA_SPEC",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x80ff,
-//		.desc = "Advanced SIMD and SVE integer matrix multiply Operations speculatively executed.",
-//	},
-//	{
-//		.name = "BR_IMMED_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8110,
-//		.desc = "Instruction architecturally executed, predicted immediate branch.",
-//	},
-//	{
-//		.name = "BR_IMMED_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8111,
-//		.desc = "Instruction architecturally executed, mispredicted immediate branch.",
-//	},
-//	{
-//		.name = "BR_IND_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8112,
-//		.desc = "Instruction architecturally executed, predicted indirect branch.",
-//	},
-//	{
-//		.name = "BR_IND_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8113,
-//		.desc = "Instruction architecturally executed, mispredicted indirect branch.",
-//	},
-//	{
-//		.name = "BR_RETURN_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8114,
-//		.desc = "Instruction architecturally executed, predicted procedure return.",
-//	},
-//	{
-//		.name = "BR_RETURN_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8115,
-//		.desc = "Instruction architecturally executed, mispredicted procedure return.",
-//	},
-//	{
-//		.name = "BR_INDNR_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8116,
-//		.desc = "Instruction architecturally executed, predicted indirect branch, excluding return.",
-//	},
-//	{
-//		.name = "BR_INDNR_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8117,
-//		.desc = "Instruction architecturally executed, mispredicted indirect branch, excluding return.",
-//	},
-//	{
-//		.name = "BR_TAKEN_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8118,
-//		.desc = "Instruction architecturally executed, predicted branch, taken.",
-//	},
-//	{
-//		.name = "BR_TAKEN_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x8119,
-//		.desc = "Instruction architecturally executed, mispredicted branch, taken.",
-//	},
-//	{
-//		.name = "BR_SKIP_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x811a,
-//		.desc = "Instruction architecturally executed, predicted branch, not taken.",
-//	},
-//	{
-//		.name = "BR_SKIP_MIS_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x811b,
-//		.desc = "Instruction architecturally executed, mispredicted branch, not taken.",
-//	},
-//	{
-//		.name = "BR_PRED_RETIRED",
-//		.modmsk = ARMV8_ATTRS,
-//		.code = 0x811c,
-//		.desc = "Instruction architecturally executed, predicted branch.",
-//	},
 
 	/* ARM recommended Implementation Defined */
 	{
diff --git a/lib/pfmlib_arm_armv8.c b/lib/pfmlib_arm_armv8.c
index fca44e9..4e6eb93 100644
--- a/lib/pfmlib_arm_armv8.c
+++ b/lib/pfmlib_arm_armv8.c
@@ -297,7 +297,8 @@ pfmlib_pmu_t arm_hisilicon_kunpeng_support={
 	.pe             = arm_kunpeng_pe,
 	.pmu_detect     = pfm_arm_detect_hisilicon_kunpeng,
 	.max_encoding   = 1,
-	.num_cntrs      = 6,
+	.num_cntrs      = 12,
+	.num_fixed_cntrs      = 1,
 
 	.get_event_encoding[PFM_OS_NONE] = pfm_arm_get_encoding,
 	 PFMLIB_ENCODE_PERF(pfm_arm_get_perf_encoding),
-- 
2.27.0

