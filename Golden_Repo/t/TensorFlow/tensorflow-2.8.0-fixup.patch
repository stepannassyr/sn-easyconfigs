diff --color -urN tensorflow/workspace0.bzl tensorflow/workspace0.bzl
--- tensorflow/workspace0.bzl	2022-05-12 08:59:20.478507284 +0000
+++ tensorflow/workspace0.bzl	2022-05-12 13:07:45.434191229 +0000
@@ -5,8 +5,7 @@
 load("@bazel_toolchains//repositories:repositories.bzl", bazel_toolchains_repositories = "repositories")
 load("@build_bazel_rules_swift//swift:repositories.bzl", "swift_rules_dependencies")
 load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")
-load("@local_config_android//:android.bzl", "android_workspace")
-load("@rules_cc//cc:repositories.bzl", "rules_cc_toolchains")
+#load("@local_config_android//:android.bzl", "android_workspace")
 
 def _tf_bind():
     """Bind targets for some external repositories"""
@@ -103,15 +102,13 @@
         ],
     )
 
-    rules_cc_toolchains()
-
     bazel_toolchains_repositories()
 
     # Use `swift_rules_dependencies` to fetch the toolchains. With the
     # `git_repository` rules above, the following call will skip redefining them.
     swift_rules_dependencies()
 
-    android_workspace()
+#    android_workspace()
 
     # If a target is bound twice, the later one wins, so we have to do tf bindings
     # at the end of the WORKSPACE file.
diff --color -urN tensorflow/workspace1.bzl tensorflow/workspace1.bzl
--- tensorflow/workspace1.bzl	2022-05-12 08:59:20.478507284 +0000
+++ tensorflow/workspace1.bzl	2022-05-12 13:06:29.163688959 +0000
@@ -3,14 +3,20 @@
 load("//third_party/android:android_configure.bzl", "android_configure")
 load("@tf_toolchains//toolchains:archives.bzl", "bazel_toolchains_archive")
 load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")
-load("@io_bazel_rules_closure//closure:defs.bzl", "closure_repositories")
-load("@rules_cuda//cuda:dependencies.bzl", "rules_cuda_dependencies")
+load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
+#load("@rules_cuda//cuda:dependencies.bzl", "rules_cuda_dependencies")
 
 def workspace():
     native.register_toolchains("@local_config_python//:py_toolchain")
-    rules_cuda_dependencies()
+#    rules_cuda_dependencies()
+
+    rules_closure_dependencies(
+        omit_bazel_skylib = True,
+        omit_com_google_protobuf = True,
+        omit_com_google_protobuf_js = True,
+    )
+    rules_closure_toolchains()
 
-    closure_repositories()
     bazel_toolchains_archive()
 
     android_configure(name = "local_config_android")
