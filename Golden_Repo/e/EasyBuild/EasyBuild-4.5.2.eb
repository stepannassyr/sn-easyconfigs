easyblock = 'EB_EasyBuildMeta'

name = 'EasyBuild'
version = '4.5.2'

homepage = 'https://easybuilders.github.io/easybuild'
description = """EasyBuild is a software build and installation framework
 written in Python that allows you to install software in a structured,
 repeatable and robust way."""

toolchain = SYSTEM

source_urls = [
    # easybuild-framework
    'https://files.pythonhosted.org/packages/c9/ab/97fb7e054494ff2526f32f061c9d64795b46cd553a3e6c119a4c05316496/',
    # easybuild-easyblocks
    'https://files.pythonhosted.org/packages/ae/d3/933992ff3ba424c5de0ddcb514cabff9507d7dff6b18052fd28cde4dbe1a/',
    # easybuild-easyconfigs
    'https://files.pythonhosted.org/packages/aa/c6/d47ed3cd2765b3df0a786bc30595c340be29abe98825ebd52a19e26c3fdc/',
]
sources = [
    'easybuild-framework-%(version)s.tar.gz',
    'easybuild-easyblocks-%(version)s.tar.gz',
    'easybuild-easyconfigs-%(version)s.tar.gz',
]
checksums = [
    '011f9916306492684841e98777cc64652fa5f738a0cd3e819d958be82c2305e8',  # easybuild-framework-4.5.2.tar.gz
    'cbe7f5f0171b4a4846f723d77757875c7d80f2bbd76def95698f37addd472663',  # easybuild-easyblocks-4.5.2.tar.gz
    'f6fd3870e267b59f18c0e43c29e80adb1544d6f52ea5676be84e9630bae2bce3',  # easybuild-easyconfigs-4.5.2.tar.gz
]
patches = [
    ('framework-patches/0001-Add-lzip-support-EasyBuild-4.5.2.patch', '../easybuild-framework-%(version)s'),
    ('framework-patches/0002-Undepreciate-goolf.patch', '../easybuild-framework-%(version)s'),
    ('framework-patches/0003-Add-extra-libs-to-gcc-toolchain.patch', '../easybuild-framework-%(version)s'),
    ('easyblock-patches/0001-Add-armclang-to-Boost-EasyBuild-4.5.2.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0002-Add-armclang-to-fortranpythonpackage.py.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0003-versionindependentpythonpackage.py-use-makedirs-inst.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0004-Add-Arm-PL-support-to-ScaLAPACK-EasyBuild-4.5.2.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0005-Add-armlinux-to-score-p-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0006-Add-clang-to-score-p-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0007-Add-armlinux-to-pdt-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
# Discard all the clang patches. They need a major rework
#    ('easyblock-patches/0008-More-llvm-projects-in-clang-and-work-on-gcc-independ.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0009-clang-git-versions-more-gcc-independence-one_source-.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0010-clang-easyblock-check-symlink-existence.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0011-netcdf-fix-gcc10.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0012-scalapack-fix-gcc10.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0013-fix-typos.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0014-Update-clang-options-for-later-stages.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0015-Clang-add-enable_modules-option.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0016-clang.py-fuse-ld-lld.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/0017-clang.py-undo-runtimes.patch', '../easybuild-easyblocks-%(version)s'),
#    ('easyblock-patches/clang-remove-pstl-and-make-compilable.patch', '../easybuild-easyblocks-%(version)s'),
    ('boost-fix-arch-tags.patch', '../easybuild-easyblocks-%(version)s'),
    ]

# order matters a lot, to avoid having dependencies auto-resolved (--no-deps easy_install option doesn't work?)
# EasyBuild is a (set of) Python packages, so it depends on Python
# usually, we want to use the system Python, so no actual Python dependency is listed
allow_system_deps = [('Python', SYS_PYTHON_VERSION)]

local_pyshortver = '.'.join(SYS_PYTHON_VERSION.split('.')[:2])

sanity_check_paths = {
    'files': ['bin/eb'],
    'dirs': ['lib/python%s/site-packages' % local_pyshortver],
}

moduleclass = 'tools'
