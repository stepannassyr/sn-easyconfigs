# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
##
# This file is an EasyBuild reciPY as per https://github.com/hpcugent/easybuild
#
# Copyright:: Copyright 2012-2014 Uni.Lu/LCSB, NTUA
# Authors::   Fotis Georgatos <fotis@cern.ch>
# License::   MIT/GPL
# $Id$
#
# This work implements a part of the HPCBIOS project and is a component of the policy:
# http://hpcbios.readthedocs.org/en/latest/HPCBIOS_07-02.html
##

easyblock = 'ConfigureMake'

name = 'PAPI'
version = '6.0.0.1-70887df7'

homepage = 'http://icl.cs.utk.edu/projects/papi/'
description = """PAPI provides the tool designer and application engineer with a consistent interface and
 methodology for use of the performance counter hardware found in most major microprocessors. PAPI enables
 software engineers to see, in near real time, the relation between software performance and processor events.
 In addition Component PAPI provides access to a collection of components
 that expose performance measurement opportunites across the hardware and software stack.
"""


toolchain = {'name': 'GCCcore', 'version': '12.1.0'}

#source_urls = ['http://icl.cs.utk.edu/projects/papi/downloads/']
#sources = [SOURCELOWER_TAR_GZ]
sources = [{
    'filename': '%(name)s-%(version)s.tar.gz',
    'git_config': {
        'url': 'https://bitbucket.org/icl',
        'repo_name': 'papi',
        'commit': '70887df7f86e9c946d2aa92b6ff464bbe4e1bdbf',
        'recursive': True,
        'keep_git_dir': True,
    },
}]
patches = [
            'PAPI-6.0.0.1-add-cortex-a72.patch',
            'PAPI-6.0.0.1-add-kunpeng.patch'
]

builddependencies = [
    ('binutils', '2.38')
]

dependencies = [
    ('libpfm', '4.11.1-f6500e77')
]

# rapl and powercap for energy measurement
configopts  = " --with-components=\"rapl powercap infiniband net appio coretemp io \" "
# use separately built libpfm
configopts += " --with-pfm-prefix=$EBROOTLIBPFM "

start_dir = 'src'

# parallel build doesn't always work
# parallel = 1

# TODO: Test hangs with hi1620 for some reason, but runs through when running manually, needs a deeper look
import os as local_os
if local_os.getenv("ARCHITECTURE").find("Kunpeng920") == -1:
    runtest = 'fulltest'

sanity_check_paths = {
    'files': ["bin/papi_%s" % x for x in ["avail", "clockres", "command_line", "component_avail",
                                          "cost", "decode", "error_codes", "event_chooser",
                                          "mem_info", "multiplex_cost", "native_avail", "version",
                                          "xml_event_info"]],
    'dirs': [],
}

moduleclass = 'perf'
