##
# This file is an EasyBuild reciPY as per https://github.com/easybuilders/easybuild
#
# Copyright:: Copyright 2013-2015 Dmitri Gribenko, Ward Poelmans
# Authors:: Dmitri Gribenko <gribozavr@gmail.com>
# Authors:: Ward Poelmans <wpoely86@gmail.com>
# License:: GPLv2 or later, MIT, three-clause BSD.
# $Id$
##

name = 'Clang'
version = '11.0.0-git'

homepage = 'http://clang.llvm.org/'
description = """C, C++, Objective-C compiler, based on LLVM."""

toolchain = SYSTEM
# Do not set optarch to True: it will cause the build to fail
# toolchainopts = {'optarch': False}

#source_urls = ["http://releases.llvm.org/%(version)s/"]
#source_urls = ["http://github.com/llvm/llvm-project/releases/download/llvmorg-%(version)s/"]
#sources = [
#    'llvm-%(version)s.src.tar.xz',
#    'clang-%(version)s.src.tar.xz',
#    'compiler-rt-%(version)s.src.tar.xz',
#    'polly-%(version)s.src.tar.xz',
#    'openmp-%(version)s.src.tar.xz',
#    # Also include the LLVM linker
#    'lld-%(version)s.src.tar.xz',
#    'libcxx-%(version)s.src.tar.xz',
#    'libcxxabi-%(version)s.src.tar.xz',
#    'libunwind-%(version)s.src.tar.xz',
#    'lldb-%(version)s.src.tar.xz',
#    'clang-tools-extra-%(version)s.src.tar.xz',
#]
sources = [
    {
        'filename' : 'llvm-%(version)s.tar.gz',
        'git_config':
        {
            'url' : 'https://github.com/llvm',
            'repo_name' : 'llvm-project',
            'tag' : 'master'
        }
    },
]
patches = [
    'Clang-11.0.0-omp-libm.patch'
]
#checksums = [
#    '00a1ee1f389f81e9979f3a640a01c431b3021de0d42278f6508391a2f0b81c9a',  # llvm-9.0.1.src.tar.xz
#    '5778512b2e065c204010f88777d44b95250671103e434f9dc7363ab2e3804253',  # clang-9.0.1.src.tar.xz
#    'c2bfab95c9986318318363d7f371a85a95e333bc0b34fbfa52edbd3f5e3a9077',  # compiler-rt-9.0.1.src.tar.xz
#    '9a4ac69df923230d13eb6cd0d03f605499f6a854b1dc96a9b72c4eb075040fcf',  # polly-9.0.1.src.tar.xz
#    '5c94060f846f965698574d9ce22975c0e9f04c9b14088c3af5f03870af75cace',  # openmp-9.0.1.src.tar.xz
#    '86262bad3e2fd784ba8c5e2158d7aa36f12b85f2515e95bc81d65d75bb9b0c82',  # lld-9.0.1.src.tar.xz
#    '0981ff11b862f4f179a13576ab0a2f5530f46bd3b6b4a90f568ccc6a62914b34',  # libcxx-9.0.1.src.tar.xz
#    'e8f978aa4cfae2d7a0b4d89275637078557cca74b35c31b7283d4786948a8aac',  # libcxxabi-9.0.1.src.tar.xz
#    '535a106a700889274cc7b2f610b2dcb8fc4b0ea597c3208602d7d037141460f1',  # libunwind-9.0.1.src.tar.xz
#    '8a7b9fd795c31a3e3cba6ce1377a2ae5c67376d92888702ce27e26f0971beb09',  # lldb-9.0.1.src.tar.xz
#    'b26fd72a78bd7db998a26270ec9ec6a01346651d88fa87b4b323e13049fb6f07',  # clang-tools-extra-9.0.1.src.tar.xz
#    '318af5c651e9e785475415f0077cd9cbdffc8aabd9de50c20c24bc548eec1470',  # Clang-9.0.0-omp-libm.patch
#]

#source_urls = ["https://github.com/llvm/llvm-project/releases/download/llvmorg-%(version)s/"]
#source_urls = ["http://llvm.org/releases/%(version)s"]
dependencies = [
    # since Clang is a compiler, binutils is a runtime dependency too
    ('binutils', '2.34'),
    ('libedit', '20191231'),
#    ('GMP', '6.2.0'),
]

local_pyver = '3.8.2'
local_pysuff = '3.8'

builddependencies = [
    ('GCC', '10.0.1'),
    ('CMake', '3.16.5','',('GCCcore','10.0.1')),
    ('Python', local_pyver,'',('GCCcore','10.0.1')),
    ('libxml2', '2.9.9','',('GCCcore','10.0.1')),
]

configopts  = " -DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python%s" % local_pysuff
configopts += " -DPYTHON_INCLUDE_DIR=$EBROOTPYTHON/include/python%s" % local_pysuff
configopts += " -DPYTHON_LIBRARY=$EBROOTPYTHON/lib/libpython%s.so" % local_pysuff

# need libLLVM.so for Mesa (and probably other sw as well)
configopts += " -DBUILD_SHARED_LIBS=ON -DLLVM_BUILD_LLVM_DYLIB=ON "

# FileCheck needed for Rust
configopts += " -DLLVM_INCLUDE_UTILS=ON -DLLVM_INSTALL_UTILS=ONE "

default_openmp_runtime = 'libomp'
assertions      = True
usepolly        = True
build_lld       = True
libcxx          = True
enable_rtti     = True
static_analyzer = True

skip_all_tests = True

moduleclass = 'compiler'
