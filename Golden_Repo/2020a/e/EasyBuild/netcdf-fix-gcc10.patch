diff -urN easybuild-unpatched/easyblocks/n/netcdf_fortran.py easybuild/easyblocks/n/netcdf_fortran.py
--- easybuild-unpatched/easyblocks/n/netcdf_fortran.py	2020-05-08 20:49:12.090183701 +0200
+++ easybuild/easyblocks/n/netcdf_fortran.py	2020-05-08 22:05:44.082546612 +0200
@@ -33,11 +33,13 @@
 """
 
 import os
+from distutils.version import LooseVersion
 
 import easybuild.tools.environment as env
 import easybuild.tools.toolchain as toolchain
 from easybuild.easyblocks.generic.configuremake import ConfigureMake
 from easybuild.tools.systemtools import get_shared_lib_ext
+from easybuild.tools.modules import get_software_version
 
 
 class EB_netCDF_minus_Fortran(ConfigureMake):
@@ -49,11 +51,14 @@
         if self.toolchain.options['pic']:
             self.cfg.update('configopts', "--with-pic")
 
-        self.cfg.update('configopts', 'FCFLAGS="%s" FC="%s"' % (os.getenv('FFLAGS'), os.getenv('F90')))
-
         # add -DgFortran to CPPFLAGS when building with GCC
         if self.toolchain.comp_family() == toolchain.GCC:  #@UndefinedVariable
             env.setvar('CPPFLAGS', "%s -DgFortran" % os.getenv('CPPFLAGS'))
+            if LooseVersion(get_software_version("GCC")) >= LooseVersion("10"):
+                env.setvar('FCFLAGS', "%s -fallow-argument-mismatch" % os.getenv('FCFLAGS'))
+                env.setvar('FFLAGS', "%s -fallow-argument-mismatch" % os.getenv('FFLAGS'))
+
+        self.cfg.update('configopts', 'FCFLAGS="%s" FC="%s"' % (os.getenv('FFLAGS'), os.getenv('F90')))
 
         super(EB_netCDF_minus_Fortran, self).configure_step()
 
diff -urN easybuild-unpatched/easyblocks/n/netcdf.py easybuild/easyblocks/n/netcdf.py
--- easybuild-unpatched/easyblocks/n/netcdf.py	2020-05-08 20:49:12.079183575 +0200
+++ easybuild/easyblocks/n/netcdf.py	2020-05-08 21:17:37.557612454 +0200
@@ -74,6 +74,10 @@
             ConfigureMake.configure_step(self)
 
         else:
+        
+            if self.toolchain.comp_family() == toolchain.GCC:
+                if LooseVersion(get_software_version("GCC")) >= LooseVersion("10"):
+                    self.cfg.update('configopts', '-DCMAKE_C_FLAGS="%s -fcommon"' % os.getenv('CFLAGS'))
             for (dep, libname) in [('cURL', 'curl'), ('HDF5', 'hdf5'), ('Szip', 'sz'), ('zlib', 'z'),
                                    ('PnetCDF', 'pnetcdf')]:
                 dep_root = get_software_root(dep)
