easyblock = 'EB_EasyBuildMeta'

name = 'EasyBuild'
version = '4.3.3'

homepage = 'https://easybuilders.github.io/easybuild'
description = """EasyBuild is a software build and installation framework
 written in Python that allows you to install software in a structured,
 repeatable and robust way."""

toolchain = SYSTEM

source_urls = [
    # easybuild-framework
    'https://files.pythonhosted.org/packages/f9/64/c43c80fc156e848d57c69e0050a86e2304168b0e9aa0fef8996aa62193d4/',
    # easybuild-easyblocks
    'https://files.pythonhosted.org/packages/df/ac/3ea4218e8b1307fb869efb565cda46f3280e59ecca1a8a5eaa6cd8116bb3/',
    # easybuild-easyconfigs
    'https://files.pythonhosted.org/packages/9c/f2/51979a480815c2cb1c661a7809664e31128bd75fedaa5bf01ad739bfec25/',
]
sources = [
    'easybuild-framework-%(version)s.tar.gz',
    'easybuild-easyblocks-%(version)s.tar.gz',
    'easybuild-easyconfigs-%(version)s.tar.gz',
]
patches = [
    ('framework-patches/0001-Add-lzip-support.patch', '../easybuild-framework-%(version)s'),
    ('framework-patches/0002-Undepreciate-goolf.patch', '../easybuild-framework-%(version)s'),
    ('framework-patches/0003-Add-extra-libs-to-gcc-toolchain.patch', '../easybuild-framework-%(version)s'),
    ('easyblock-patches/0001-Add-armclang-to-Boost.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0002-Add-armclang-to-fortranpythonpackage.py.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0003-versionindependentpythonpackage.py-use-makedirs-inst.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0004-Add-Arm-PL-support-to-ScaLAPACK.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0005-Add-armlinux-to-score-p-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0006-Add-clang-to-score-p-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0007-Add-armlinux-to-pdt-easyblock.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0008-More-llvm-projects-in-clang-and-work-on-gcc-independ.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0009-clang-git-versions-more-gcc-independence-one_source-.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0010-clang-easyblock-check-symlink-existence.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0011-netcdf-fix-gcc10.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0012-scalapack-fix-gcc10.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0013-fix-typos.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0014-Update-clang-options-for-later-stages.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0015-Clang-add-enable_modules-option.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0016-clang.py-fuse-ld-lld.patch', '../easybuild-easyblocks-%(version)s'),
    ('easyblock-patches/0017-clang.py-undo-runtimes.patch', '../easybuild-easyblocks-%(version)s'),
    ]

# order matters a lot, to avoid having dependencies auto-resolved (--no-deps easy_install option doesn't work?)
# EasyBuild is a (set of) Python packages, so it depends on Python
# usually, we want to use the system Python, so no actual Python dependency is listed
allow_system_deps = [('Python', SYS_PYTHON_VERSION)]

local_pyshortver = '.'.join(SYS_PYTHON_VERSION.split('.')[:2])

sanity_check_paths = {
    'files': ['bin/eb'],
    'dirs': ['lib/python%s/site-packages' % local_pyshortver],
}

moduleclass = 'tools'
