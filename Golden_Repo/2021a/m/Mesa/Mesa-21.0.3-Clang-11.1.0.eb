# This file is part of JSC's public easybuild repository (https://github.com/easybuilders/jsc)
# the purpose of the easyconfig is to build a Mesa for software rendering,
# not hardware rendering. This means you want at least SSE4.2. We build:
# - llvmpipe: the high-performance Gallium LLVM driver
# - swr: Intel's OpenSWR
# it will try to use the llvmpipe by default. It you want swr, do:
# GALLIUM_DRIVER=swr

easyblock = 'MesonNinja'

name = 'Mesa'
version = '21.0.3'

homepage = 'http://www.mesa3d.org/'
description = """
Mesa is an open-source implementation of the OpenGL specification -
 a system for rendering interactive 3D graphics.
"""


toolchain = {'name': 'Clang', 'version': '11.1.0'}
# swr detects and builds parts specific for AVX and AVX2. If we use
# -xHost, this always gets overwritten and will fail.
#toolchainopts = {'optarch': False}

source_urls = [
    'https://mesa.freedesktop.org/archive/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/older-versions/%(version_major)s.x/%(version)s',
    'ftp://ftp.freedesktop.org/pub/mesa/',
]
sources = [SOURCELOWER_TAR_XZ]
patches = ['Mesa-21.0.3-force-native-llvm-module.patch']
checksums = [
    '565c6f4bd2d5747b919454fc1d439963024fc78ca56fd05158c3b2cde2f6912b',
    '357344b9b0f63774d8ec290c5109a665330bca630d0e18b38d884c8091962a00',
]

local_pyver = '3.9.4'

builddependencies = [
    ('binutils', '2.36.1'),
    ('flex', '2.6.4'),
    ('Bison', '3.7.6'),
    ('Autotools', '20210330'),
    ('pkg-config', '0.29.2'),
    ('expat', '2.3.0'),
    ('Python', local_pyver),
    ('Mako', '1.1.4'),
    ('libxml2', '2.9.10-babe7503', '-Python-%s' % local_pyver),
    ('Meson', '0.57.1', '-Python-%s' % local_pyver),
    ('Ninja', '1.10.2'),
    ('CMake', '3.20.0'),
]

dependencies = [
    ('zlib', '1.2.11'),
    ('nettle', '3.7.2'),
    ('libdrm', '2.4.104'),
    ('libglvnd', '1.3.2'),
    ('LLVM', '12.0.0'),
    ('X11', '20210331'),
    ('libunwind', '1.5.0'),
]

configopts  = '-Dgbm=true'
configopts += ' -Dglx=auto' # auto, disabled, dri, xlib, gallium-xlib
configopts += ' -Dgallium=true'
configopts += ' -Dllvm=true'
configopts += ' -Dglvnd=true'
configopts += ' -Dshared-llvm=true'
configopts += ' -Ddri-drivers=""' # '', 'auto', 'i915', 'i965', 'r100', 'r200', 'nouveau', 'swrast'
configopts += ' -Dgallium-drivers="swrast"'
configopts += ' -Dvulkan-drivers="swrast"'
configopts += ' -Dgallium-vdpau=false'
configopts += ' -Dgallium-omx=disabled'
configopts += ' -Dgallium-xvmc=false'
configopts += ' -Dtools="glsl,nir"'
configopts += ' -Dplatforms=x11' # '', 'auto', 'x11', 'wayland', 'drm', 'surfaceless', 'haiku', 'android'

#modextravars = {
#    'GALLIUM_DRIVER' : 'llvmpipe'
#}


# libGL, libGLES, etc... provided by libglvnd. Packages depending on Mesa will also implicitly load libglvnd, so everything should be available
sanity_check_paths = {
    'files': ['lib/lib%s.%s' % (x,SHLIB_EXT) for x in ['EGL_mesa','GLX_mesa','gbm']] +
             ['lib/dri/swrast_dri.so','include/gbm.h'],
    'dirs': []
}

# symlink indirect to mesa GLX, similar to Debian, see
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=881789
# This helps in certain X forwarding situations (e.g. XQuartz)
postinstallcmds = ["ln -s libGLX_mesa.so.0 %(installdir)s/lib/libGLX_indirect.so.0"]

# Tells libglvnd where to find EGL libraries
modextrapaths = {"__EGL_VENDOR_LIBRARY_DIRS": "share/glvnd/egl_vendor.d"}

moduleclass = 'vis'
